Docker provisioning notes in centos/RHEL using AWS EC2 instance
===============================================================

Step : 1 
========
Login to AWS Console and create a EC2 instance.
save the private key to use for login into Putty session of the EC2 instance using Public IP address

Step : 2
========
Login into EC2 instance as ec2-user

Step : 3
========

[ec2-user@ip-172-31-25-169 ~]$ id
uid=1000(ec2-user) gid=1000(ec2-user) groups=1000(ec2-user),4(adm),10(wheel),190(systemd-journal) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023

switch as root user

[ec2-user@ip-172-31-25-169 ~]$ sudo su -
[root@ip-172-31-25-169 ~]#

Note : For installing docker, we need either login as user : root  (or) should be inside a user which is a member of a group called "docker".

Step : 4
========
sudo yum install -y yum-utils device-mapper-persistent-data lvm2

sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

output of the above yum-config-manager command 
=============================================
Loaded plugins: amazon-id, rhui-lb
adding repo from: https://download.docker.com/linux/centos/docker-ce.repo
grabbing file https://download.docker.com/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo
repo saved to /etc/yum.repos.d/docker-ce.repo
===============================================

sudo yum install –y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

output of the above command :
===============================
Is this ok [y/d/N]: y
Downloading packages:
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : epel-release-7-12.noarch                                                                                                                            1/1
  Verifying  : epel-release-7-12.noarch                                                                                                                            1/1

Installed:
  epel-release.noarch 0:7-12

Complete!
====================================


sudo yum-config-manager --enable rhui-REGION-rhel-server-extras

sudo yum install -y docker-ce

Now Let's check if the docker client binary location and the docker version :
[root@ip-172-31-25-169 ~]# docker -v
Docker version 19.03.4, build 9013bf583a
[root@ip-172-31-25-169 ~]# which docker
/bin/docker

Now let's enable the docker service at Linux system level 
[root@ip-172-31-25-169 ~]# sudo systemctl enable docker
Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.

Now Let's start the docker system service

[root@ip-172-31-25-169 ~]# sudo systemctl start docker
[root@ip-172-31-25-169 ~]# ps -eaf | grep docker
root     19109     1  7 08:57 ?        00:00:00 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
root     19258 17961  0 08:57 pts/0    00:00:00 grep --color=auto docker

We can see from above "/usr/bin/dockerd" daemon or service running

Let's check the docker info in detail using the below command :

docker info

[root@ip-172-31-25-169 ~]# docker info
========================================================================================

Client:
 Debug Mode: false

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 0
 Server Version: 19.03.4
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: true
  Native Overlay Diff: true
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339
 runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657
 init version: fec3683
 Security Options:
  seccomp
   Profile: default
 Kernel Version: 3.10.0-862.el7.x86_64
 Operating System: Red Hat Enterprise Linux Server 7.5 (Maipo)
 OSType: linux
 Architecture: x86_64
 CPUs: 1
 Total Memory: 1.794GiB
 Name: ip-172-31-25-169.ap-south-1.compute.internal
 ID: 4M24:V7H6:OIMM:VG4O:R6EL:CEDN:MGRL:HBDQ:X3DA:7OUX:CESQ:BNZT
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

===================================================================================================
Workflow of Docker 
===========================
Pull -> Create -> Start -> Stop -> Restart -> Pause -> Unpause  -> Stop - >Delete

[root@ip-172-31-25-169 ~]# docker pull jenkins

let's install Jenkins App by pulling it from hub.docker.com/_/jenkins

Using default tag: latest
latest: Pulling from library/jenkins
55cbf04beb70: Pull complete
1607093a898c: Pull complete
9a8ea045c926: Pull complete
d4eee24d4dac: Pull complete
c58988e753d7: Pull complete
794a04897db9: Pull complete
70fcfa476f73: Pull complete
0539c80a02be: Pull complete
54fefc6dcf80: Pull complete
911bc90e47a8: Pull complete
38430d93efed: Pull complete
7e46ccda148a: Pull complete
c0cbcb5ac747: Pull complete
35ade7a86a8e: Pull complete
aa433a6a56b1: Pull complete
841c1dd38d62: Pull complete
b865dcb08714: Pull complete
5a3779030005: Pull complete
12b47c68955c: Pull complete
1322ea3e7bfd: Pull complete
Digest: sha256:eeb4850eb65f2d92500e421b430ed1ec58a7ac909e91f518926e02473904f668
Status: Downloaded newer image for jenkins:latest
docker.io/library/jenkins:latest
=================================================================================

Let check the below output's

[root@ip-172-31-25-169 ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
jenkins             latest              cd14cecfdb3a        15 months ago       696MB
[root@ip-172-31-25-169 ~]# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

======================================================

So, let's create the jenkins apps

[root@ip-172-31-25-169 ~]# docker create jenkins
87014bb885ea7cec59d116403e089eced61bbe0f07f74de0ef66a379ac7179be
[root@ip-172-31-25-169 ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
jenkins             latest              cd14cecfdb3a        15 months ago       696MB
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   5 seconds ago        Created                                 elated_kirch
41dd682b11b3        jenkins             "/bin/tini -- /usr/l…"   About a minute ago   Created                                 cool_faraday

==========================







