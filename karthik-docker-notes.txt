Theory about Docker :

DOCKER
===========================
What is Docker?
    Container mgmt tool
    Free
    Open Source
    Version
        Community
        Enterprise
    By Docker
    Written in Go
--------------------
    How you run APP?
        20 YEARS In PAST- PHYSCIAL SERVER
        NOW - VMs
        NOW ONWARDS
------------
WHY VM?
    Reducing a Cost
    Avoid a Wasteage
    Speed of running app.
--------------------------
10 APP -------> 10 PS
----------------------------
10 APP -------> 10 VMs
    WHY?
===================================
What is container?
    Container is USER SPACE (USER NS)
                With their own
                - MOUNT (MNT NS) -----------------> FROM IMAGE
                - Network (NET NS)
                - Process Map (PMAP ns)
    with a help of DOCKER.

Container is a light weight package containing app.
========================================
Architecure of Docker
---------------------

Humen -> Docker Client --API ---> Docker Daemon --> Kernal 
        ------------Docker Engine---------------



Docker Components?
--- Docker Engine
--- Docker Image
            OS LIB + Dependent Soft + Apps
--- Registry (https://hub.docker.com/)
        - repository

--- Container
    From Image you create container 
    One Image can create millions of container in one second.

    How to install Docker?
    https://www.devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html
===============================================================================================================

Docker provisioning notes in centos/RHEL using AWS EC2 instance
===============================================================

Step : 1 
========
Login to AWS Console and create a EC2 instance.
save the private key to use for login into Putty session of the EC2 instance using Public IP address

Step : 2
========
Login into EC2 instance as ec2-user

Step : 3
========

[ec2-user@ip-172-31-25-169 ~]$ id
uid=1000(ec2-user) gid=1000(ec2-user) groups=1000(ec2-user),4(adm),10(wheel),190(systemd-journal) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023

switch as root user

[ec2-user@ip-172-31-25-169 ~]$ sudo su -
[root@ip-172-31-25-169 ~]#

Note : For installing docker, we need either login as user : root  (or) should be inside a user which is a member of a group called "docker".

Step : 4
========
sudo yum install -y yum-utils device-mapper-persistent-data lvm2

sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

output of the above yum-config-manager command 
=============================================
Loaded plugins: amazon-id, rhui-lb
adding repo from: https://download.docker.com/linux/centos/docker-ce.repo
grabbing file https://download.docker.com/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo
repo saved to /etc/yum.repos.d/docker-ce.repo
===============================================

sudo yum install –y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

output of the above command :
===============================
Is this ok [y/d/N]: y
Downloading packages:
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : epel-release-7-12.noarch                                                                                                                            1/1
  Verifying  : epel-release-7-12.noarch                                                                                                                            1/1

Installed:
  epel-release.noarch 0:7-12

Complete!
====================================


sudo yum-config-manager --enable rhui-REGION-rhel-server-extras

sudo yum install -y docker-ce

Now Let's check if the docker client binary location and the docker version :
[root@ip-172-31-25-169 ~]# docker -v
Docker version 19.03.4, build 9013bf583a
[root@ip-172-31-25-169 ~]# which docker
/bin/docker

Now let's enable the docker service at Linux system level 
[root@ip-172-31-25-169 ~]# sudo systemctl enable docker
Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.

Now Let's start the docker system service

[root@ip-172-31-25-169 ~]# sudo systemctl start docker
[root@ip-172-31-25-169 ~]# ps -eaf | grep docker
root     19109     1  7 08:57 ?        00:00:00 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
root     19258 17961  0 08:57 pts/0    00:00:00 grep --color=auto docker

We can see from above "/usr/bin/dockerd" daemon or service running

Let's check the docker info in detail using the below command :

docker info

[root@ip-172-31-25-169 ~]# docker info
========================================================================================

Client:
 Debug Mode: false

Server:
 Containers: 0
  Running: 0
  Paused: 0
  Stopped: 0
 Images: 0
 Server Version: 19.03.4
 Storage Driver: overlay2
  Backing Filesystem: xfs
  Supports d_type: true
  Native Overlay Diff: true
 Logging Driver: json-file
 Cgroup Driver: cgroupfs
 Plugins:
  Volume: local
  Network: bridge host ipvlan macvlan null overlay
  Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
 Swarm: inactive
 Runtimes: runc
 Default Runtime: runc
 Init Binary: docker-init
 containerd version: b34a5c8af56e510852c35414db4c1f4fa6172339
 runc version: 3e425f80a8c931f88e6d94a8c831b9d5aa481657
 init version: fec3683
 Security Options:
  seccomp
   Profile: default
 Kernel Version: 3.10.0-862.el7.x86_64
 Operating System: Red Hat Enterprise Linux Server 7.5 (Maipo)
 OSType: linux
 Architecture: x86_64
 CPUs: 1
 Total Memory: 1.794GiB
 Name: ip-172-31-25-169.ap-south-1.compute.internal
 ID: 4M24:V7H6:OIMM:VG4O:R6EL:CEDN:MGRL:HBDQ:X3DA:7OUX:CESQ:BNZT
 Docker Root Dir: /var/lib/docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: false
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false

===================================================================================================
Workflow of Docker 
===========================
Pull -> Create -> Start -> Stop -> Restart -> Pause -> Unpause  -> Stop - >Delete

[root@ip-172-31-25-169 ~]# docker pull jenkins

let's install Jenkins App by pulling it from hub.docker.com/_/jenkins

Using default tag: latest
latest: Pulling from library/jenkins
55cbf04beb70: Pull complete
1607093a898c: Pull complete
9a8ea045c926: Pull complete
d4eee24d4dac: Pull complete
c58988e753d7: Pull complete
794a04897db9: Pull complete
70fcfa476f73: Pull complete
0539c80a02be: Pull complete
54fefc6dcf80: Pull complete
911bc90e47a8: Pull complete
38430d93efed: Pull complete
7e46ccda148a: Pull complete
c0cbcb5ac747: Pull complete
35ade7a86a8e: Pull complete
aa433a6a56b1: Pull complete
841c1dd38d62: Pull complete
b865dcb08714: Pull complete
5a3779030005: Pull complete
12b47c68955c: Pull complete
1322ea3e7bfd: Pull complete
Digest: sha256:eeb4850eb65f2d92500e421b430ed1ec58a7ac909e91f518926e02473904f668
Status: Downloaded newer image for jenkins:latest
docker.io/library/jenkins:latest
=================================================================================

Let check the below output's

[root@ip-172-31-25-169 ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
jenkins             latest              cd14cecfdb3a        15 months ago       696MB
[root@ip-172-31-25-169 ~]# docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

======================================================

So, let's create the jenkins apps

[root@ip-172-31-25-169 ~]# docker create jenkins
87014bb885ea7cec59d116403e089eced61bbe0f07f74de0ef66a379ac7179be
[root@ip-172-31-25-169 ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
jenkins             latest              cd14cecfdb3a        15 months ago       696MB
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   5 seconds ago        Created                                 elated_kirch
41dd682b11b3        jenkins             "/bin/tini -- /usr/l…"   About a minute ago   Created                                 cool_faraday

==========================

Now do some docker administration commands :

[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   33 minutes ago      Created                                 elated_kirch
[root@ip-172-31-25-169 ~]# docker start 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                 NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   33 minutes ago      Up 2 seconds        8080/tcp, 50000/tcp   elated_kirch
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                 NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   33 minutes ago      Up 11 seconds       8080/tcp, 50000/tcp   elated_kirch
[root@ip-172-31-25-169 ~]# docker stop 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   34 minutes ago      Exited (143) 2 seconds ago                       elated_kirch
[root@ip-172-31-25-169 ~]# docker restart 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                 NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   34 minutes ago      Up 7 seconds        8080/tcp, 50000/tcp   elated_kirch
[root@ip-172-31-25-169 ~]# docker pause 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                   PORTS                 NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   34 minutes ago      Up 32 seconds (Paused)   8080/tcp, 50000/tcp   elated_kirch
[root@ip-172-31-25-169 ~]# docker unpause 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                 NAMES
87014bb885ea        jenkins             "/bin/tini -- /usr/l…"   34 minutes ago      Up 38 seconds       8080/tcp, 50000/tcp   elated_kirch
[root@ip-172-31-25-169 ~]# docker rm 87014bb885ea
Error response from daemon: You cannot remove a running container 87014bb885ea7cec59d116403e089eced61bbe0f07f74de0ef66a379ac7179be. Stop the container before attempting removal or force remove
[root@ip-172-31-25-169 ~]#

[root@ip-172-31-25-169 ~]# docker stop 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker rm 87014bb885ea
87014bb885ea
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

==================================================================================================================================

Now let's see how to install an application in deattached mode.

[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES
196fa1562f0b        jenkins             "/bin/tini -- /usr/l…"   22 seconds ago      Exited (130) 3 seconds ago                       peaceful_lamarr
[root@ip-172-31-25-169 ~]# docker run -d jenkins
bc7f412ceb8e62fa0e1ad5848b094dbf49b80803d23cf0c4659f102887f3e0c3
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                        PORTS                 NAMES
bc7f412ceb8e        jenkins             "/bin/tini -- /usr/l…"   2 seconds ago       Up 2 seconds                  8080/tcp, 50000/tcp   epic_beaver
196fa1562f0b        jenkins             "/bin/tini -- /usr/l…"   35 seconds ago      Exited (130) 16 seconds ago                         peaceful_lamarr
[root@ip-172-31-25-169 ~]# docker stop bc7f412ceb8e
bc7f412ceb8e
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                        PORTS               NAMES
bc7f412ceb8e        jenkins             "/bin/tini -- /usr/l…"   26 seconds ago      Exited (143) 2 seconds ago                        epic_beaver
196fa1562f0b        jenkins             "/bin/tini -- /usr/l…"   59 seconds ago      Exited (130) 40 seconds ago                       peaceful_lamarr
[root@ip-172-31-25-169 ~]# docker rm bc7f412ceb8e 196fa1562f0b
bc7f412ceb8e
196fa1562f0b
[root@ip-172-31-25-169 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[root@ip-172-31-25-169 ~]# ps -eaf | grep docker
root     19109     1  0 08:57 ?        00:00:16 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
root     21039 17961  0 10:10 pts/0    00:00:00 grep --color=auto docker

================================================================================================================================

[root@ip-172-31-25-169 ~]# docker run -d jenkins
ec76f589dc5d8600a344a53862cfa575f34864034403d538ce39e42415ccfb82
[root@ip-172-31-25-169 ~]# ps -eaf | grep docker
root     19109     1  0 08:57 ?        00:00:16 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
root     21052 19107  0 10:12 ?        00:00:00 containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/ec76f589dc5d8600a344a53862cfa575f34864034403d538ce39e42415ccfb82 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc
root     21126 17961  0 10:12 pts/0    00:00:00 grep --color=auto docker
[root@ip-172-31-25-169 ~]# docker run -d jenkins
3626c6baf1811995af6699c934d5af1df94bb12e2203d6893edf1450e4c34c21
[root@ip-172-31-25-169 ~]# ps -eaf | grep docker
root     19109     1  0 08:57 ?        00:00:17 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
root     21052 19107  0 10:12 ?        00:00:00 containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/ec76f589dc5d8600a344a53862cfa575f34864034403d538ce39e42415ccfb82 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc
root     21163 19107  0 10:12 ?        00:00:00 containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/3626c6baf1811995af6699c934d5af1df94bb12e2203d6893edf1450e4c34c21 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc
root     21237 17961  0 10:12 pts/0    00:00:00 grep --color=auto docker
[root@ip-172-31-25-169 ~]# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                 NAMES
3626c6baf181        jenkins             "/bin/tini -- /usr/l…"   44 seconds ago       Up 43 seconds       8080/tcp, 50000/tcp   awesome_moore
ec76f589dc5d        jenkins             "/bin/tini -- /usr/l…"   About a minute ago   Up About a minute   8080/tcp, 50000/tcp   agitated_morse

===============================================================================================================================

[root@ip-172-31-25-169 ~]# docker exec 3626c6baf181 df -kh
Filesystem      Size  Used Avail Use% Mounted on
overlay          30G  2.9G   28G  10% /
tmpfs            64M     0   64M   0% /dev
tmpfs           919M     0  919M   0% /sys/fs/cgroup
shm              64M     0   64M   0% /dev/shm
/dev/xvda2       30G  2.9G   28G  10% /var/jenkins_home
tmpfs           919M     0  919M   0% /proc/acpi
tmpfs           919M     0  919M   0% /proc/scsi
tmpfs           919M     0  919M   0% /sys/firmware
[root@ip-172-31-25-169 ~]# docker exec ec76f589dc5d df -kh
Filesystem      Size  Used Avail Use% Mounted on
overlay          30G  2.9G   28G  10% /
tmpfs            64M     0   64M   0% /dev
tmpfs           919M     0  919M   0% /sys/fs/cgroup
shm              64M     0   64M   0% /dev/shm
/dev/xvda2       30G  2.9G   28G  10% /var/jenkins_home
tmpfs           919M     0  919M   0% /proc/acpi
tmpfs           919M     0  919M   0% /proc/scsi
tmpfs           919M     0  919M   0% /sys/firmware

================================================================================================================================

[root@ip-172-31-25-169 ~]# docker exec 3626c6baf181 touch /var/jenkins_home/karthik_unique_file1.txt
[root@ip-172-31-25-169 ~]# docker exec 3626c6baf181 ls /var/jenkins_home/karthik_unique_file1.txt
/var/jenkins_home/karthik_unique_file1.txt
[root@ip-172-31-25-169 ~]# docker exec ec76f589dc5d ls /var/jenkins_home/karthik_unique_file1.txt
ls: cannot access '/var/jenkins_home/karthik_unique_file1.txt': No such file or directory

===============================================================================================================================

How to access container?
        BROWSERS

[root@ip-172-31-25-169 ~]# docker run -d -p 8085:8080 jenkins
845afe1baa5bbd2a7fb0e920fe6e1018ac6e01a42611ab038d55c249f02d03ce
[root@ip-172-31-25-169 ~]# netstat -anl | grep '8085'
tcp6       0      0 :::8085                 :::*                    LISTEN
unix  2      [ ACC ]     STREAM     LISTENING     18085    private/proxymap




